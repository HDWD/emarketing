{"version":"0.2.7","name":"Abandon Shopping Cart","description":"Send out emails to your abandon shopping carts and try getting your customers back on track. \r\n(Aggressive - after 1hour)","check_frequency":"1","min_resend_interval":"14","autologin":"0","expire_time":"180","provider":"quote","filter_export":"{\"type\":\"quote\",\"aggregator\":\"all\",\"expectation\":\"true\",\"param_campaign\":{},\"param_store_id\":\"1\",\"param_gmt_offset\":-600,\"filters\":[{\"type\":\"newsletter\",\"condition\":\"is\",\"status\":\"1\"},{\"type\":\"quote_table\",\"column\":\"store_id\",\"operator\":\"()\",\"value\":[\"1\"]},{\"type\":\"quote_table\",\"column\":\"base_grand_total\",\"operator\":\">=\",\"value\":\"25\"},{\"type\":\"quote_table\",\"column\":\"updated_at\",\"relative\":\"1\",\"anniversary\":\"\",\"direction\":\"past\",\"value_from\":\"0.75\",\"value_to\":\"1.25\",\"value_unit\":\"hours\"}]}","medium":"email","medium_json":"{\"designmode\":\"1\",\"template_id\":\"9\",\"subject\":\"You left items in your cart\",\"body\":\"{\\\"version\\\":1,\\\"customCss\\\":{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null},\\\"fields\\\":{\\\"short_teaser\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"Use this area to offer a short teaser of your email&#39;s content. Text here will show in the preview area of some email clients.\\\"}],\\\"Header\\\":[{\\\"remove\\\":true,\\\"alt\\\":null,\\\"value\\\":null}],\\\"header_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/2425ea8ad3\\\/images\\\/header_placeholder_600px.png\\\"}],\\\"main_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<p><strong>Hello&nbsp;{{var customer.name}},<\\\/strong><br \\\/>\\\\nThere is something in your cart....<\\\/p>\\\\n\\\"}],\\\"contentBottom\\\":[{\\\"remove\\\":true,\\\"alt\\\":null,\\\"value\\\":null}],\\\"contentBottomTr\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}],\\\"left_column_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/27aac8a65e64c994c4416d6b8\\\/images\\\/header_placeholder_260px.png\\\"}],\\\"left_column_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<h3>Repeatable Content<\\\/h3>\\\\n<a href=\\\\\\\"http:\\\/\\\/kb.mailchimp.com\\\/article\\\/how-do-i-work-with-repeatable-content-blocks\\\\\\\" target=\\\\\\\"_blank\\\\\\\">Repeatable sections<\\\/a> are noted with plus and minus signs so that you can add and subtract content blocks.<br \\\/>\\\\n<br \\\/>\\\\nYou can get a little fancy; repeat blocks and remove all text to make image galleries, or do the opposite and remove images for text-only blocks.\\\"}],\\\"right_column_image\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"http:\\\/\\\/gallery.mailchimp.com\\\/27aac8a65e64c994c4416d6b8\\\/images\\\/header_placeholder_260px.png\\\"}],\\\"right_column_content\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":\\\"<h3>Repeatable Content<\\\/h3>\\\\n<a href=\\\\\\\"http:\\\/\\\/kb.mailchimp.com\\\/article\\\/how-do-i-work-with-repeatable-content-blocks\\\\\\\" target=\\\\\\\"_blank\\\\\\\">Repeatable sections<\\\/a> are noted with plus and minus signs so that you can add and subtract content blocks.<br \\\/>\\\\n<br \\\/>\\\\nYou can also get a little fancy; repeat blocks and remove all text to make image galleries, or do the opposite and remove images for text-only blocks.\\\"}],\\\"Footer\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}],\\\"Unsubscribe\\\":[{\\\"remove\\\":false,\\\"alt\\\":null,\\\"value\\\":null}]}}\",\"prerender\":\"0\",\"forward_emails\":\"\"}"}